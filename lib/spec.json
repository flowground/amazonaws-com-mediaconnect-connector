{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://mediaconnect.amazonaws.com/"
        },
        {
            "url": "http://mediaconnect.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "API for AWS Elemental MediaConnect",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "AWS MediaConnect",
        "version": "2018-11-14",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediaconnect-2018-11-14.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "mediaconnect"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://docs.aws.amazon.com/mediaconnect/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/tags/{resourceArn}": {
            "delete": {
                "description": "Deletes the specified tags from a resource.",
                "operationId": "UntagResource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Lists all tags associated with the resource.",
                "operationId": "ListTagsForResource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Tags": {
                                            "description": "A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Associates the specified tags to a resource. If the request does not mention an existing tag associated with the resource, that tag is not changed.",
                "operationId": "TagResource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The tags to add to the resource. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
                                "properties": {
                                    "Tags": {
                                        "description": "A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v1/entitlements": {
            "get": {
                "description": "Displays a list of all entitlements that have been granted to this account. This request returns 20 results per page.",
                "operationId": "ListEntitlements",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Entitlements": {
                                            "description": "A list of entitlements that have been granted to you from other AWS accounts.",
                                            "items": {
                                                "description": "An entitlement that has been granted to you from other AWS accounts.",
                                                "properties": {
                                                    "EntitlementArn": {
                                                        "description": "The ARN of the entitlement.",
                                                        "type": "string"
                                                    },
                                                    "EntitlementName": {
                                                        "description": "The name of the entitlement.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "EntitlementArn",
                                                    "EntitlementName"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token that identifies which batch of results that you want to see. For example, you submit a ListEntitlements request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListEntitlements request a second time and specify the NextToken value.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/v1/flows": {
            "get": {
                "description": "Displays a list of flows that are associated with this account. This request returns a paginated result.",
                "operationId": "ListFlows",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "NextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Flows": {
                                            "description": "A list of flow summaries.",
                                            "items": {
                                                "description": "Provides a summary of a flow, including its ARN, Availability Zone, and source type.",
                                                "properties": {
                                                    "AvailabilityZone": {
                                                        "description": "The Availability Zone that the flow was created in.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "A description of the flow.",
                                                        "type": "string"
                                                    },
                                                    "FlowArn": {
                                                        "description": "The ARN of the flow.",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the flow.",
                                                        "type": "string"
                                                    },
                                                    "SourceType": {
                                                        "description": "The type of source. This value is either owned (originated somewhere other than an AWS Elemental MediaConnect flow owned by another AWS account) or entitled (originated at an AWS Elemental MediaConnect flow owned by another AWS account).",
                                                        "enum": [
                                                            "OWNED",
                                                            "ENTITLED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The current status of the flow.",
                                                        "enum": [
                                                            "STANDBY",
                                                            "ACTIVE",
                                                            "UPDATING",
                                                            "DELETING",
                                                            "STARTING",
                                                            "STOPPING",
                                                            "ERROR"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Status",
                                                    "Description",
                                                    "SourceType",
                                                    "AvailabilityZone",
                                                    "FlowArn",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "The token that identifies which batch of results that you want to see. For example, you submit a ListFlows request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListFlows request a second time and specify the NextToken value.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new flow. The request must include one source. The request optionally can include outputs (up to 20) and entitlements (up to 50).",
                "operationId": "CreateFlow",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Flow": {
                                            "description": "The settings for a flow, including its source, outputs, and entitlements.",
                                            "properties": {
                                                "AvailabilityZone": {
                                                    "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "A description of the flow. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                                    "type": "string"
                                                },
                                                "EgressIp": {
                                                    "description": "The IP address from which video will be sent to output destinations.",
                                                    "type": "string"
                                                },
                                                "Entitlements": {
                                                    "description": "The entitlements in this flow.",
                                                    "items": {
                                                        "description": "The settings for a flow entitlement.",
                                                        "properties": {
                                                            "Description": {
                                                                "description": "A description of the entitlement.",
                                                                "type": "string"
                                                            },
                                                            "Encryption": {
                                                                "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                                                "properties": {
                                                                    "Algorithm": {
                                                                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                                        "enum": [
                                                                            "aes128",
                                                                            "aes192",
                                                                            "aes256"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "KeyType": {
                                                                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                                        "enum": [
                                                                            "static-key"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "RoleArn": {
                                                                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                                        "type": "string"
                                                                    },
                                                                    "SecretArn": {
                                                                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "SecretArn",
                                                                    "Algorithm",
                                                                    "RoleArn"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "EntitlementArn": {
                                                                "description": "The ARN of the entitlement.",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the entitlement.",
                                                                "type": "string"
                                                            },
                                                            "Subscribers": {
                                                                "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "EntitlementArn",
                                                            "Subscribers",
                                                            "Name"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "FlowArn": {
                                                    "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the flow.",
                                                    "type": "string"
                                                },
                                                "Outputs": {
                                                    "description": "The outputs in this flow.",
                                                    "items": {
                                                        "description": "The settings for an output.",
                                                        "properties": {
                                                            "Description": {
                                                                "description": "A description of the output.",
                                                                "type": "string"
                                                            },
                                                            "Destination": {
                                                                "description": "The address where you want to send the output.",
                                                                "type": "string"
                                                            },
                                                            "Encryption": {
                                                                "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                                "properties": {
                                                                    "Algorithm": {
                                                                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                                        "enum": [
                                                                            "aes128",
                                                                            "aes192",
                                                                            "aes256"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "KeyType": {
                                                                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                                        "enum": [
                                                                            "static-key"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "RoleArn": {
                                                                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                                        "type": "string"
                                                                    },
                                                                    "SecretArn": {
                                                                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "SecretArn",
                                                                    "Algorithm",
                                                                    "RoleArn"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "EntitlementArn": {
                                                                "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                                                                "type": "string"
                                                            },
                                                            "MediaLiveInputArn": {
                                                                "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the output. This value must be unique within the current flow.",
                                                                "type": "string"
                                                            },
                                                            "OutputArn": {
                                                                "description": "The ARN of the output.",
                                                                "type": "string"
                                                            },
                                                            "Port": {
                                                                "description": "The port to use when content is distributed to this output.",
                                                                "type": "integer"
                                                            },
                                                            "Transport": {
                                                                "description": "Attributes related to the transport stream that are used in the output.",
                                                                "properties": {
                                                                    "MaxBitrate": {
                                                                        "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                                        "type": "integer"
                                                                    },
                                                                    "MaxLatency": {
                                                                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                                        "type": "integer"
                                                                    },
                                                                    "Protocol": {
                                                                        "description": "The protocol that is used by the source or output.",
                                                                        "enum": [
                                                                            "zixi-push",
                                                                            "rtp-fec",
                                                                            "rtp"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "SmoothingLatency": {
                                                                        "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                                        "type": "integer"
                                                                    },
                                                                    "StreamId": {
                                                                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Protocol"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "OutputArn",
                                                            "Name"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "Source": {
                                                    "description": "The settings for the source of the flow.",
                                                    "properties": {
                                                        "Decryption": {
                                                            "description": "The type of encryption that is used on the content ingested from this source.",
                                                            "properties": {
                                                                "Algorithm": {
                                                                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                                    "enum": [
                                                                        "aes128",
                                                                        "aes192",
                                                                        "aes256"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "KeyType": {
                                                                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                                    "enum": [
                                                                        "static-key"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "RoleArn": {
                                                                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                                    "type": "string"
                                                                },
                                                                "SecretArn": {
                                                                    "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "SecretArn",
                                                                "Algorithm",
                                                                "RoleArn"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "Description": {
                                                            "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                                            "type": "string"
                                                        },
                                                        "EntitlementArn": {
                                                            "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.",
                                                            "type": "string"
                                                        },
                                                        "IngestIp": {
                                                            "description": "The IP address that the flow will be listening on for incoming content.",
                                                            "type": "string"
                                                        },
                                                        "IngestPort": {
                                                            "description": "The port that the flow will be listening on for incoming content.",
                                                            "type": "integer"
                                                        },
                                                        "Name": {
                                                            "description": "The name of the source.",
                                                            "type": "string"
                                                        },
                                                        "SourceArn": {
                                                            "description": "The ARN of the source.",
                                                            "type": "string"
                                                        },
                                                        "Transport": {
                                                            "description": "Attributes related to the transport stream that are used in the source.",
                                                            "properties": {
                                                                "MaxBitrate": {
                                                                    "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                                    "type": "integer"
                                                                },
                                                                "MaxLatency": {
                                                                    "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                                    "type": "integer"
                                                                },
                                                                "Protocol": {
                                                                    "description": "The protocol that is used by the source or output.",
                                                                    "enum": [
                                                                        "zixi-push",
                                                                        "rtp-fec",
                                                                        "rtp"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "SmoothingLatency": {
                                                                    "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                                    "type": "integer"
                                                                },
                                                                "StreamId": {
                                                                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Protocol"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "WhitelistCidr": {
                                                            "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "SourceArn",
                                                        "Name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Status": {
                                                    "description": "The current status of the flow.",
                                                    "enum": [
                                                        "STANDBY",
                                                        "ACTIVE",
                                                        "UPDATING",
                                                        "DELETING",
                                                        "STARTING",
                                                        "STOPPING",
                                                        "ERROR"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Status",
                                                "Entitlements",
                                                "Outputs",
                                                "AvailabilityZone",
                                                "FlowArn",
                                                "Source",
                                                "Name"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "CreateFlow420Exception",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Creates a new flow. The request must include one source. The request optionally can include outputs (up to 20) and entitlements (up to 50).",
                                "properties": {
                                    "AvailabilityZone": {
                                        "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS Region.",
                                        "type": "string"
                                    },
                                    "Entitlements": {
                                        "description": "The entitlements that you want to grant on a flow.",
                                        "items": {
                                            "description": "The entitlements that you want to grant on a flow.",
                                            "properties": {
                                                "Description": {
                                                    "description": "A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.",
                                                    "type": "string"
                                                },
                                                "Encryption": {
                                                    "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                                    "properties": {
                                                        "Algorithm": {
                                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                            "enum": [
                                                                "aes128",
                                                                "aes192",
                                                                "aes256"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "KeyType": {
                                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                            "enum": [
                                                                "static-key"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "RoleArn": {
                                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                            "type": "string"
                                                        },
                                                        "SecretArn": {
                                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "SecretArn",
                                                        "Algorithm",
                                                        "RoleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Name": {
                                                    "description": "The name of the entitlement. This value must be unique within the current flow.",
                                                    "type": "string"
                                                },
                                                "Subscribers": {
                                                    "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Subscribers"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Name": {
                                        "description": "The name of the flow.",
                                        "type": "string"
                                    },
                                    "Outputs": {
                                        "description": "The outputs that you want to add to this flow.",
                                        "items": {
                                            "description": "The output that you want to add to this flow.",
                                            "properties": {
                                                "Description": {
                                                    "description": "A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.",
                                                    "type": "string"
                                                },
                                                "Destination": {
                                                    "description": "The IP address from which video will be sent to output destinations.",
                                                    "type": "string"
                                                },
                                                "Encryption": {
                                                    "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                    "properties": {
                                                        "Algorithm": {
                                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                            "enum": [
                                                                "aes128",
                                                                "aes192",
                                                                "aes256"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "KeyType": {
                                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                            "enum": [
                                                                "static-key"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "RoleArn": {
                                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                            "type": "string"
                                                        },
                                                        "SecretArn": {
                                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "SecretArn",
                                                        "Algorithm",
                                                        "RoleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "MaxLatency": {
                                                    "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                    "type": "integer"
                                                },
                                                "Name": {
                                                    "description": "The name of the output. This value must be unique within the current flow.",
                                                    "type": "string"
                                                },
                                                "Port": {
                                                    "description": "The port to use when content is distributed to this output.",
                                                    "type": "integer"
                                                },
                                                "Protocol": {
                                                    "description": "The protocol to use for the output.",
                                                    "enum": [
                                                        "zixi-push",
                                                        "rtp-fec",
                                                        "rtp"
                                                    ],
                                                    "type": "string"
                                                },
                                                "SmoothingLatency": {
                                                    "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                    "type": "integer"
                                                },
                                                "StreamId": {
                                                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Destination",
                                                "Port",
                                                "Protocol"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Source": {
                                        "description": "The settings for the source of the flow.",
                                        "properties": {
                                            "Decryption": {
                                                "description": "The type of encryption that is used on the content ingested from this source.",
                                                "properties": {
                                                    "Algorithm": {
                                                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                        "enum": [
                                                            "aes128",
                                                            "aes192",
                                                            "aes256"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "KeyType": {
                                                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                        "enum": [
                                                            "static-key"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "RoleArn": {
                                                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                        "type": "string"
                                                    },
                                                    "SecretArn": {
                                                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "SecretArn",
                                                    "Algorithm",
                                                    "RoleArn"
                                                ],
                                                "type": "object"
                                            },
                                            "Description": {
                                                "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                                "type": "string"
                                            },
                                            "EntitlementArn": {
                                                "description": "The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator's flow.",
                                                "type": "string"
                                            },
                                            "IngestPort": {
                                                "description": "The port that the flow will be listening on for incoming content.",
                                                "type": "integer"
                                            },
                                            "MaxBitrate": {
                                                "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                "type": "integer"
                                            },
                                            "MaxLatency": {
                                                "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                "type": "integer"
                                            },
                                            "Name": {
                                                "description": "The name of the source.",
                                                "type": "string"
                                            },
                                            "Protocol": {
                                                "description": "The protocol that is used by the source.",
                                                "enum": [
                                                    "zixi-push",
                                                    "rtp-fec",
                                                    "rtp"
                                                ],
                                                "type": "string"
                                            },
                                            "StreamId": {
                                                "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                "type": "string"
                                            },
                                            "WhitelistCidr": {
                                                "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "Source",
                                    "Name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v1/flows/start/{flowArn}": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Starts a flow.",
                "operationId": "StartFlow",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FlowArn": {
                                            "description": "The ARN of the flow that you started.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the flow when the StartFlow process begins.",
                                            "enum": [
                                                "STANDBY",
                                                "ACTIVE",
                                                "UPDATING",
                                                "DELETING",
                                                "STARTING",
                                                "STOPPING",
                                                "ERROR"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v1/flows/stop/{flowArn}": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Stops a flow.",
                "operationId": "StopFlow",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FlowArn": {
                                            "description": "The ARN of the flow that you stopped.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the flow when the StopFlow process begins.",
                                            "enum": [
                                                "STANDBY",
                                                "ACTIVE",
                                                "UPDATING",
                                                "DELETING",
                                                "STARTING",
                                                "STOPPING",
                                                "ERROR"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v1/flows/{flowArn}": {
            "delete": {
                "description": "Deletes a flow. Before you can delete a flow, you must stop the flow.",
                "operationId": "DeleteFlow",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FlowArn": {
                                            "description": "The ARN of the flow that was deleted.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the flow when the DeleteFlow process begins.",
                                            "enum": [
                                                "STANDBY",
                                                "ACTIVE",
                                                "UPDATING",
                                                "DELETING",
                                                "STARTING",
                                                "STOPPING",
                                                "ERROR"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Displays the details of a flow. The response includes the flow ARN, name, and Availability Zone, as well as details about the source, outputs, and entitlements.",
                "operationId": "DescribeFlow",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Flow": {
                                            "description": "The settings for a flow, including its source, outputs, and entitlements.",
                                            "properties": {
                                                "AvailabilityZone": {
                                                    "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "A description of the flow. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                                    "type": "string"
                                                },
                                                "EgressIp": {
                                                    "description": "The IP address from which video will be sent to output destinations.",
                                                    "type": "string"
                                                },
                                                "Entitlements": {
                                                    "description": "The entitlements in this flow.",
                                                    "items": {
                                                        "description": "The settings for a flow entitlement.",
                                                        "properties": {
                                                            "Description": {
                                                                "description": "A description of the entitlement.",
                                                                "type": "string"
                                                            },
                                                            "Encryption": {
                                                                "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                                                "properties": {
                                                                    "Algorithm": {
                                                                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                                        "enum": [
                                                                            "aes128",
                                                                            "aes192",
                                                                            "aes256"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "KeyType": {
                                                                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                                        "enum": [
                                                                            "static-key"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "RoleArn": {
                                                                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                                        "type": "string"
                                                                    },
                                                                    "SecretArn": {
                                                                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "SecretArn",
                                                                    "Algorithm",
                                                                    "RoleArn"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "EntitlementArn": {
                                                                "description": "The ARN of the entitlement.",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the entitlement.",
                                                                "type": "string"
                                                            },
                                                            "Subscribers": {
                                                                "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "EntitlementArn",
                                                            "Subscribers",
                                                            "Name"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "FlowArn": {
                                                    "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the flow.",
                                                    "type": "string"
                                                },
                                                "Outputs": {
                                                    "description": "The outputs in this flow.",
                                                    "items": {
                                                        "description": "The settings for an output.",
                                                        "properties": {
                                                            "Description": {
                                                                "description": "A description of the output.",
                                                                "type": "string"
                                                            },
                                                            "Destination": {
                                                                "description": "The address where you want to send the output.",
                                                                "type": "string"
                                                            },
                                                            "Encryption": {
                                                                "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                                "properties": {
                                                                    "Algorithm": {
                                                                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                                        "enum": [
                                                                            "aes128",
                                                                            "aes192",
                                                                            "aes256"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "KeyType": {
                                                                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                                        "enum": [
                                                                            "static-key"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "RoleArn": {
                                                                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                                        "type": "string"
                                                                    },
                                                                    "SecretArn": {
                                                                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "SecretArn",
                                                                    "Algorithm",
                                                                    "RoleArn"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "EntitlementArn": {
                                                                "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                                                                "type": "string"
                                                            },
                                                            "MediaLiveInputArn": {
                                                                "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "description": "The name of the output. This value must be unique within the current flow.",
                                                                "type": "string"
                                                            },
                                                            "OutputArn": {
                                                                "description": "The ARN of the output.",
                                                                "type": "string"
                                                            },
                                                            "Port": {
                                                                "description": "The port to use when content is distributed to this output.",
                                                                "type": "integer"
                                                            },
                                                            "Transport": {
                                                                "description": "Attributes related to the transport stream that are used in the output.",
                                                                "properties": {
                                                                    "MaxBitrate": {
                                                                        "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                                        "type": "integer"
                                                                    },
                                                                    "MaxLatency": {
                                                                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                                        "type": "integer"
                                                                    },
                                                                    "Protocol": {
                                                                        "description": "The protocol that is used by the source or output.",
                                                                        "enum": [
                                                                            "zixi-push",
                                                                            "rtp-fec",
                                                                            "rtp"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "SmoothingLatency": {
                                                                        "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                                        "type": "integer"
                                                                    },
                                                                    "StreamId": {
                                                                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "Protocol"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "OutputArn",
                                                            "Name"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "Source": {
                                                    "description": "The settings for the source of the flow.",
                                                    "properties": {
                                                        "Decryption": {
                                                            "description": "The type of encryption that is used on the content ingested from this source.",
                                                            "properties": {
                                                                "Algorithm": {
                                                                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                                    "enum": [
                                                                        "aes128",
                                                                        "aes192",
                                                                        "aes256"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "KeyType": {
                                                                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                                    "enum": [
                                                                        "static-key"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "RoleArn": {
                                                                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                                    "type": "string"
                                                                },
                                                                "SecretArn": {
                                                                    "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "SecretArn",
                                                                "Algorithm",
                                                                "RoleArn"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "Description": {
                                                            "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                                            "type": "string"
                                                        },
                                                        "EntitlementArn": {
                                                            "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.",
                                                            "type": "string"
                                                        },
                                                        "IngestIp": {
                                                            "description": "The IP address that the flow will be listening on for incoming content.",
                                                            "type": "string"
                                                        },
                                                        "IngestPort": {
                                                            "description": "The port that the flow will be listening on for incoming content.",
                                                            "type": "integer"
                                                        },
                                                        "Name": {
                                                            "description": "The name of the source.",
                                                            "type": "string"
                                                        },
                                                        "SourceArn": {
                                                            "description": "The ARN of the source.",
                                                            "type": "string"
                                                        },
                                                        "Transport": {
                                                            "description": "Attributes related to the transport stream that are used in the source.",
                                                            "properties": {
                                                                "MaxBitrate": {
                                                                    "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                                    "type": "integer"
                                                                },
                                                                "MaxLatency": {
                                                                    "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                                    "type": "integer"
                                                                },
                                                                "Protocol": {
                                                                    "description": "The protocol that is used by the source or output.",
                                                                    "enum": [
                                                                        "zixi-push",
                                                                        "rtp-fec",
                                                                        "rtp"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "SmoothingLatency": {
                                                                    "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                                    "type": "integer"
                                                                },
                                                                "StreamId": {
                                                                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Protocol"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "WhitelistCidr": {
                                                            "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "SourceArn",
                                                        "Name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Status": {
                                                    "description": "The current status of the flow.",
                                                    "enum": [
                                                        "STANDBY",
                                                        "ACTIVE",
                                                        "UPDATING",
                                                        "DELETING",
                                                        "STARTING",
                                                        "STOPPING",
                                                        "ERROR"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Status",
                                                "Entitlements",
                                                "Outputs",
                                                "AvailabilityZone",
                                                "FlowArn",
                                                "Source",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "Messages": {
                                            "description": "Messages that provide the state of the flow.",
                                            "properties": {
                                                "Errors": {
                                                    "description": "A list of errors that might have been generated from processes on this flow.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Errors"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/v1/flows/{flowArn}/entitlements": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Grants entitlements to an existing flow.",
                "operationId": "GrantFlowEntitlements",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Entitlements": {
                                            "description": "The entitlements that were just granted.",
                                            "items": {
                                                "description": "The settings for a flow entitlement.",
                                                "properties": {
                                                    "Description": {
                                                        "description": "A description of the entitlement.",
                                                        "type": "string"
                                                    },
                                                    "Encryption": {
                                                        "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                                        "properties": {
                                                            "Algorithm": {
                                                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                                "enum": [
                                                                    "aes128",
                                                                    "aes192",
                                                                    "aes256"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "KeyType": {
                                                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                                "enum": [
                                                                    "static-key"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "RoleArn": {
                                                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                                "type": "string"
                                                            },
                                                            "SecretArn": {
                                                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "SecretArn",
                                                            "Algorithm",
                                                            "RoleArn"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "EntitlementArn": {
                                                        "description": "The ARN of the entitlement.",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the entitlement.",
                                                        "type": "string"
                                                    },
                                                    "Subscribers": {
                                                        "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "EntitlementArn",
                                                    "Subscribers",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FlowArn": {
                                            "description": "The ARN of the flow that these entitlements were granted to.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "GrantFlowEntitlements420Exception",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A request to grant entitlements on a flow.",
                                "properties": {
                                    "Entitlements": {
                                        "description": "The list of entitlements that you want to grant.",
                                        "items": {
                                            "description": "The entitlements that you want to grant on a flow.",
                                            "properties": {
                                                "Description": {
                                                    "description": "A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.",
                                                    "type": "string"
                                                },
                                                "Encryption": {
                                                    "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                                    "properties": {
                                                        "Algorithm": {
                                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                            "enum": [
                                                                "aes128",
                                                                "aes192",
                                                                "aes256"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "KeyType": {
                                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                            "enum": [
                                                                "static-key"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "RoleArn": {
                                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                            "type": "string"
                                                        },
                                                        "SecretArn": {
                                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "SecretArn",
                                                        "Algorithm",
                                                        "RoleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Name": {
                                                    "description": "The name of the entitlement. This value must be unique within the current flow.",
                                                    "type": "string"
                                                },
                                                "Subscribers": {
                                                    "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Subscribers"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Entitlements"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v1/flows/{flowArn}/entitlements/{entitlementArn}": {
            "delete": {
                "description": "Revokes an entitlement from a flow. Once an entitlement is revoked, the content becomes unavailable to the subscriber and the associated output is removed.",
                "operationId": "RevokeFlowEntitlement",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "entitlementArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "EntitlementArn": {
                                            "description": "The ARN of the entitlement that was revoked.",
                                            "type": "string"
                                        },
                                        "FlowArn": {
                                            "description": "The ARN of the flow that the entitlement was revoked from.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "You can change an entitlement's description, subscribers, and encryption. If you change the subscribers, the service will remove the outputs that are are used by the subscribers that are removed.",
                "operationId": "UpdateFlowEntitlement",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "entitlementArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Entitlement": {
                                            "description": "The settings for a flow entitlement.",
                                            "properties": {
                                                "Description": {
                                                    "description": "A description of the entitlement.",
                                                    "type": "string"
                                                },
                                                "Encryption": {
                                                    "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                                    "properties": {
                                                        "Algorithm": {
                                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                            "enum": [
                                                                "aes128",
                                                                "aes192",
                                                                "aes256"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "KeyType": {
                                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                            "enum": [
                                                                "static-key"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "RoleArn": {
                                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                            "type": "string"
                                                        },
                                                        "SecretArn": {
                                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "SecretArn",
                                                        "Algorithm",
                                                        "RoleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "EntitlementArn": {
                                                    "description": "The ARN of the entitlement.",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the entitlement.",
                                                    "type": "string"
                                                },
                                                "Subscribers": {
                                                    "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "EntitlementArn",
                                                "Subscribers",
                                                "Name"
                                            ],
                                            "type": "object"
                                        },
                                        "FlowArn": {
                                            "description": "The ARN of the flow that this entitlement was granted on.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The entitlement fields that you want to update.",
                                "properties": {
                                    "Description": {
                                        "description": "A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.",
                                        "type": "string"
                                    },
                                    "Encryption": {
                                        "description": "The type of encryption that will be used on the output associated with this entitlement.",
                                        "properties": {
                                            "Algorithm": {
                                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                "enum": [
                                                    "aes128",
                                                    "aes192",
                                                    "aes256"
                                                ],
                                                "type": "string"
                                            },
                                            "KeyType": {
                                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                "enum": [
                                                    "static-key"
                                                ],
                                                "type": "string"
                                            },
                                            "RoleArn": {
                                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                "type": "string"
                                            },
                                            "SecretArn": {
                                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Subscribers": {
                                        "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v1/flows/{flowArn}/outputs": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds outputs to an existing flow. You can create up to 20 outputs per flow.",
                "operationId": "AddFlowOutputs",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FlowArn": {
                                            "description": "The ARN of the flow that these outputs were added to.",
                                            "type": "string"
                                        },
                                        "Outputs": {
                                            "description": "The details of the newly added outputs.",
                                            "items": {
                                                "description": "The settings for an output.",
                                                "properties": {
                                                    "Description": {
                                                        "description": "A description of the output.",
                                                        "type": "string"
                                                    },
                                                    "Destination": {
                                                        "description": "The address where you want to send the output.",
                                                        "type": "string"
                                                    },
                                                    "Encryption": {
                                                        "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                        "properties": {
                                                            "Algorithm": {
                                                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                                "enum": [
                                                                    "aes128",
                                                                    "aes192",
                                                                    "aes256"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "KeyType": {
                                                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                                "enum": [
                                                                    "static-key"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "RoleArn": {
                                                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                                "type": "string"
                                                            },
                                                            "SecretArn": {
                                                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "SecretArn",
                                                            "Algorithm",
                                                            "RoleArn"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "EntitlementArn": {
                                                        "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                                                        "type": "string"
                                                    },
                                                    "MediaLiveInputArn": {
                                                        "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "The name of the output. This value must be unique within the current flow.",
                                                        "type": "string"
                                                    },
                                                    "OutputArn": {
                                                        "description": "The ARN of the output.",
                                                        "type": "string"
                                                    },
                                                    "Port": {
                                                        "description": "The port to use when content is distributed to this output.",
                                                        "type": "integer"
                                                    },
                                                    "Transport": {
                                                        "description": "Attributes related to the transport stream that are used in the output.",
                                                        "properties": {
                                                            "MaxBitrate": {
                                                                "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                                "type": "integer"
                                                            },
                                                            "MaxLatency": {
                                                                "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                                "type": "integer"
                                                            },
                                                            "Protocol": {
                                                                "description": "The protocol that is used by the source or output.",
                                                                "enum": [
                                                                    "zixi-push",
                                                                    "rtp-fec",
                                                                    "rtp"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "SmoothingLatency": {
                                                                "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                                "type": "integer"
                                                            },
                                                            "StreamId": {
                                                                "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Protocol"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "OutputArn",
                                                    "Name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AddFlowOutputs420Exception",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A request to add outputs to the specified flow.",
                                "properties": {
                                    "Outputs": {
                                        "description": "A list of outputs that you want to add.",
                                        "items": {
                                            "description": "The output that you want to add to this flow.",
                                            "properties": {
                                                "Description": {
                                                    "description": "A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.",
                                                    "type": "string"
                                                },
                                                "Destination": {
                                                    "description": "The IP address from which video will be sent to output destinations.",
                                                    "type": "string"
                                                },
                                                "Encryption": {
                                                    "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                    "properties": {
                                                        "Algorithm": {
                                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                            "enum": [
                                                                "aes128",
                                                                "aes192",
                                                                "aes256"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "KeyType": {
                                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                            "enum": [
                                                                "static-key"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "RoleArn": {
                                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                            "type": "string"
                                                        },
                                                        "SecretArn": {
                                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "SecretArn",
                                                        "Algorithm",
                                                        "RoleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "MaxLatency": {
                                                    "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                    "type": "integer"
                                                },
                                                "Name": {
                                                    "description": "The name of the output. This value must be unique within the current flow.",
                                                    "type": "string"
                                                },
                                                "Port": {
                                                    "description": "The port to use when content is distributed to this output.",
                                                    "type": "integer"
                                                },
                                                "Protocol": {
                                                    "description": "The protocol to use for the output.",
                                                    "enum": [
                                                        "zixi-push",
                                                        "rtp-fec",
                                                        "rtp"
                                                    ],
                                                    "type": "string"
                                                },
                                                "SmoothingLatency": {
                                                    "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                    "type": "integer"
                                                },
                                                "StreamId": {
                                                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Destination",
                                                "Port",
                                                "Protocol"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Outputs"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v1/flows/{flowArn}/outputs/{outputArn}": {
            "delete": {
                "description": "Removes an output from an existing flow. This request can be made only on an output that does not have an entitlement associated with it. If the output has an entitlement, you must revoke the entitlement instead. When an entitlement is revoked from a flow, the service automatically removes the associated output.",
                "operationId": "RemoveFlowOutput",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "outputArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FlowArn": {
                                            "description": "The ARN of the flow that is associated with the output you removed.",
                                            "type": "string"
                                        },
                                        "OutputArn": {
                                            "description": "The ARN of the output that was removed.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates an existing flow output.",
                "operationId": "UpdateFlowOutput",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "outputArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FlowArn": {
                                            "description": "The ARN of the flow that is associated with the updated output.",
                                            "type": "string"
                                        },
                                        "Output": {
                                            "description": "The settings for an output.",
                                            "properties": {
                                                "Description": {
                                                    "description": "A description of the output.",
                                                    "type": "string"
                                                },
                                                "Destination": {
                                                    "description": "The address where you want to send the output.",
                                                    "type": "string"
                                                },
                                                "Encryption": {
                                                    "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                    "properties": {
                                                        "Algorithm": {
                                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                            "enum": [
                                                                "aes128",
                                                                "aes192",
                                                                "aes256"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "KeyType": {
                                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                            "enum": [
                                                                "static-key"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "RoleArn": {
                                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                            "type": "string"
                                                        },
                                                        "SecretArn": {
                                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "SecretArn",
                                                        "Algorithm",
                                                        "RoleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "EntitlementArn": {
                                                    "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                                                    "type": "string"
                                                },
                                                "MediaLiveInputArn": {
                                                    "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                                                    "type": "string"
                                                },
                                                "Name": {
                                                    "description": "The name of the output. This value must be unique within the current flow.",
                                                    "type": "string"
                                                },
                                                "OutputArn": {
                                                    "description": "The ARN of the output.",
                                                    "type": "string"
                                                },
                                                "Port": {
                                                    "description": "The port to use when content is distributed to this output.",
                                                    "type": "integer"
                                                },
                                                "Transport": {
                                                    "description": "Attributes related to the transport stream that are used in the output.",
                                                    "properties": {
                                                        "MaxBitrate": {
                                                            "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                            "type": "integer"
                                                        },
                                                        "MaxLatency": {
                                                            "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                            "type": "integer"
                                                        },
                                                        "Protocol": {
                                                            "description": "The protocol that is used by the source or output.",
                                                            "enum": [
                                                                "zixi-push",
                                                                "rtp-fec",
                                                                "rtp"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "SmoothingLatency": {
                                                            "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                            "type": "integer"
                                                        },
                                                        "StreamId": {
                                                            "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Protocol"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "OutputArn",
                                                "Name"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The fields that you want to update in the output.",
                                "properties": {
                                    "Description": {
                                        "description": "A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.",
                                        "type": "string"
                                    },
                                    "Destination": {
                                        "description": "The IP address where you want to send the output.",
                                        "type": "string"
                                    },
                                    "Encryption": {
                                        "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                        "properties": {
                                            "Algorithm": {
                                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                "enum": [
                                                    "aes128",
                                                    "aes192",
                                                    "aes256"
                                                ],
                                                "type": "string"
                                            },
                                            "KeyType": {
                                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                "enum": [
                                                    "static-key"
                                                ],
                                                "type": "string"
                                            },
                                            "RoleArn": {
                                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                "type": "string"
                                            },
                                            "SecretArn": {
                                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "MaxLatency": {
                                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                        "type": "integer"
                                    },
                                    "Port": {
                                        "description": "The port to use when content is distributed to this output.",
                                        "type": "integer"
                                    },
                                    "Protocol": {
                                        "description": "The protocol to use for the output.",
                                        "enum": [
                                            "zixi-push",
                                            "rtp-fec",
                                            "rtp"
                                        ],
                                        "type": "string"
                                    },
                                    "SmoothingLatency": {
                                        "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                        "type": "integer"
                                    },
                                    "StreamId": {
                                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/v1/flows/{flowArn}/source/{sourceArn}": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the source of a flow.",
                "operationId": "UpdateFlowSource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "flowArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "sourceArn",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "FlowArn": {
                                            "description": "The ARN of the flow that you want to update.",
                                            "type": "string"
                                        },
                                        "Source": {
                                            "description": "The settings for the source of the flow.",
                                            "properties": {
                                                "Decryption": {
                                                    "description": "The type of encryption that is used on the content ingested from this source.",
                                                    "properties": {
                                                        "Algorithm": {
                                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                            "enum": [
                                                                "aes128",
                                                                "aes192",
                                                                "aes256"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "KeyType": {
                                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                            "enum": [
                                                                "static-key"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "RoleArn": {
                                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                            "type": "string"
                                                        },
                                                        "SecretArn": {
                                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "SecretArn",
                                                        "Algorithm",
                                                        "RoleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "Description": {
                                                    "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                                    "type": "string"
                                                },
                                                "EntitlementArn": {
                                                    "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.",
                                                    "type": "string"
                                                },
                                                "IngestIp": {
                                                    "description": "The IP address that the flow will be listening on for incoming content.",
                                                    "type": "string"
                                                },
                                                "IngestPort": {
                                                    "description": "The port that the flow will be listening on for incoming content.",
                                                    "type": "integer"
                                                },
                                                "Name": {
                                                    "description": "The name of the source.",
                                                    "type": "string"
                                                },
                                                "SourceArn": {
                                                    "description": "The ARN of the source.",
                                                    "type": "string"
                                                },
                                                "Transport": {
                                                    "description": "Attributes related to the transport stream that are used in the source.",
                                                    "properties": {
                                                        "MaxBitrate": {
                                                            "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                            "type": "integer"
                                                        },
                                                        "MaxLatency": {
                                                            "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                            "type": "integer"
                                                        },
                                                        "Protocol": {
                                                            "description": "The protocol that is used by the source or output.",
                                                            "enum": [
                                                                "zixi-push",
                                                                "rtp-fec",
                                                                "rtp"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "SmoothingLatency": {
                                                            "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                            "type": "integer"
                                                        },
                                                        "StreamId": {
                                                            "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Protocol"
                                                    ],
                                                    "type": "object"
                                                },
                                                "WhitelistCidr": {
                                                    "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "SourceArn",
                                                "Name"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerErrorException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ForbiddenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TooManyRequestsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A request to update the source of a flow.",
                                "properties": {
                                    "Decryption": {
                                        "description": "The type of encryption used on the content ingested from this source.",
                                        "properties": {
                                            "Algorithm": {
                                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                "enum": [
                                                    "aes128",
                                                    "aes192",
                                                    "aes256"
                                                ],
                                                "type": "string"
                                            },
                                            "KeyType": {
                                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                "enum": [
                                                    "static-key"
                                                ],
                                                "type": "string"
                                            },
                                            "RoleArn": {
                                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                "type": "string"
                                            },
                                            "SecretArn": {
                                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Description": {
                                        "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                        "type": "string"
                                    },
                                    "EntitlementArn": {
                                        "description": "The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator's flow.",
                                        "type": "string"
                                    },
                                    "IngestPort": {
                                        "description": "The port that the flow will be listening on for incoming content.",
                                        "type": "integer"
                                    },
                                    "MaxBitrate": {
                                        "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                        "type": "integer"
                                    },
                                    "MaxLatency": {
                                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                        "type": "integer"
                                    },
                                    "Protocol": {
                                        "description": "The protocol that is used by the source.",
                                        "enum": [
                                            "zixi-push",
                                            "rtp-fec",
                                            "rtp"
                                        ],
                                        "type": "string"
                                    },
                                    "StreamId": {
                                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                        "type": "string"
                                    },
                                    "WhitelistCidr": {
                                        "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddFlowOutputs420Exception": {},
            "AddFlowOutputsRequest": {
                "description": "A request to add outputs to the specified flow.",
                "properties": {
                    "Outputs": {
                        "description": "A list of outputs that you want to add.",
                        "items": {
                            "description": "The output that you want to add to this flow.",
                            "properties": {
                                "Description": {
                                    "description": "A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.",
                                    "type": "string"
                                },
                                "Destination": {
                                    "description": "The IP address from which video will be sent to output destinations.",
                                    "type": "string"
                                },
                                "Encryption": {
                                    "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                    "properties": {
                                        "Algorithm": {
                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                            "enum": [
                                                "aes128",
                                                "aes192",
                                                "aes256"
                                            ],
                                            "type": "string"
                                        },
                                        "KeyType": {
                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                            "enum": [
                                                "static-key"
                                            ],
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                            "type": "string"
                                        },
                                        "SecretArn": {
                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SecretArn",
                                        "Algorithm",
                                        "RoleArn"
                                    ],
                                    "type": "object"
                                },
                                "MaxLatency": {
                                    "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                    "type": "integer"
                                },
                                "Name": {
                                    "description": "The name of the output. This value must be unique within the current flow.",
                                    "type": "string"
                                },
                                "Port": {
                                    "description": "The port to use when content is distributed to this output.",
                                    "type": "integer"
                                },
                                "Protocol": {
                                    "description": "The protocol to use for the output.",
                                    "enum": [
                                        "zixi-push",
                                        "rtp-fec",
                                        "rtp"
                                    ],
                                    "type": "string"
                                },
                                "SmoothingLatency": {
                                    "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                    "type": "integer"
                                },
                                "StreamId": {
                                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Destination",
                                "Port",
                                "Protocol"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Outputs"
                ],
                "type": "object"
            },
            "AddFlowOutputsResponse": {
                "properties": {
                    "FlowArn": {
                        "description": "The ARN of the flow that these outputs were added to.",
                        "type": "string"
                    },
                    "Outputs": {
                        "description": "The details of the newly added outputs.",
                        "items": {
                            "description": "The settings for an output.",
                            "properties": {
                                "Description": {
                                    "description": "A description of the output.",
                                    "type": "string"
                                },
                                "Destination": {
                                    "description": "The address where you want to send the output.",
                                    "type": "string"
                                },
                                "Encryption": {
                                    "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                    "properties": {
                                        "Algorithm": {
                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                            "enum": [
                                                "aes128",
                                                "aes192",
                                                "aes256"
                                            ],
                                            "type": "string"
                                        },
                                        "KeyType": {
                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                            "enum": [
                                                "static-key"
                                            ],
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                            "type": "string"
                                        },
                                        "SecretArn": {
                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SecretArn",
                                        "Algorithm",
                                        "RoleArn"
                                    ],
                                    "type": "object"
                                },
                                "EntitlementArn": {
                                    "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                                    "type": "string"
                                },
                                "MediaLiveInputArn": {
                                    "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the output. This value must be unique within the current flow.",
                                    "type": "string"
                                },
                                "OutputArn": {
                                    "description": "The ARN of the output.",
                                    "type": "string"
                                },
                                "Port": {
                                    "description": "The port to use when content is distributed to this output.",
                                    "type": "integer"
                                },
                                "Transport": {
                                    "description": "Attributes related to the transport stream that are used in the output.",
                                    "properties": {
                                        "MaxBitrate": {
                                            "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                            "type": "integer"
                                        },
                                        "MaxLatency": {
                                            "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                            "type": "integer"
                                        },
                                        "Protocol": {
                                            "description": "The protocol that is used by the source or output.",
                                            "enum": [
                                                "zixi-push",
                                                "rtp-fec",
                                                "rtp"
                                            ],
                                            "type": "string"
                                        },
                                        "SmoothingLatency": {
                                            "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                            "type": "integer"
                                        },
                                        "StreamId": {
                                            "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Protocol"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "OutputArn",
                                "Name"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AddOutputRequest": {
                "description": "The output that you want to add to this flow.",
                "properties": {
                    "Description": {
                        "description": "A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.",
                        "type": "string"
                    },
                    "Destination": {
                        "description": "The IP address from which video will be sent to output destinations.",
                        "type": "string"
                    },
                    "Encryption": {
                        "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                        "properties": {
                            "Algorithm": {
                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                "enum": [
                                    "aes128",
                                    "aes192",
                                    "aes256"
                                ],
                                "type": "string"
                            },
                            "KeyType": {
                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                "enum": [
                                    "static-key"
                                ],
                                "type": "string"
                            },
                            "RoleArn": {
                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                "type": "string"
                            },
                            "SecretArn": {
                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "SecretArn",
                            "Algorithm",
                            "RoleArn"
                        ],
                        "type": "object"
                    },
                    "MaxLatency": {
                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                        "type": "integer"
                    },
                    "Name": {
                        "description": "The name of the output. This value must be unique within the current flow.",
                        "type": "string"
                    },
                    "Port": {
                        "description": "The port to use when content is distributed to this output.",
                        "type": "integer"
                    },
                    "Protocol": {
                        "description": "The protocol to use for the output.",
                        "enum": [
                            "zixi-push",
                            "rtp-fec",
                            "rtp"
                        ],
                        "type": "string"
                    },
                    "SmoothingLatency": {
                        "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                        "type": "integer"
                    },
                    "StreamId": {
                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                        "type": "string"
                    }
                },
                "required": [
                    "Destination",
                    "Port",
                    "Protocol"
                ],
                "type": "object"
            },
            "Algorithm": {
                "enum": [
                    "aes128",
                    "aes192",
                    "aes256"
                ],
                "type": "string"
            },
            "BadRequestException": {},
            "CreateFlow420Exception": {},
            "CreateFlowRequest": {
                "description": "Creates a new flow. The request must include one source. The request optionally can include outputs (up to 20) and entitlements (up to 50).",
                "properties": {
                    "AvailabilityZone": {
                        "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS Region.",
                        "type": "string"
                    },
                    "Entitlements": {
                        "description": "The entitlements that you want to grant on a flow.",
                        "items": {
                            "description": "The entitlements that you want to grant on a flow.",
                            "properties": {
                                "Description": {
                                    "description": "A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.",
                                    "type": "string"
                                },
                                "Encryption": {
                                    "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                    "properties": {
                                        "Algorithm": {
                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                            "enum": [
                                                "aes128",
                                                "aes192",
                                                "aes256"
                                            ],
                                            "type": "string"
                                        },
                                        "KeyType": {
                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                            "enum": [
                                                "static-key"
                                            ],
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                            "type": "string"
                                        },
                                        "SecretArn": {
                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SecretArn",
                                        "Algorithm",
                                        "RoleArn"
                                    ],
                                    "type": "object"
                                },
                                "Name": {
                                    "description": "The name of the entitlement. This value must be unique within the current flow.",
                                    "type": "string"
                                },
                                "Subscribers": {
                                    "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Subscribers"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Name": {
                        "description": "The name of the flow.",
                        "type": "string"
                    },
                    "Outputs": {
                        "description": "The outputs that you want to add to this flow.",
                        "items": {
                            "description": "The output that you want to add to this flow.",
                            "properties": {
                                "Description": {
                                    "description": "A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.",
                                    "type": "string"
                                },
                                "Destination": {
                                    "description": "The IP address from which video will be sent to output destinations.",
                                    "type": "string"
                                },
                                "Encryption": {
                                    "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                    "properties": {
                                        "Algorithm": {
                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                            "enum": [
                                                "aes128",
                                                "aes192",
                                                "aes256"
                                            ],
                                            "type": "string"
                                        },
                                        "KeyType": {
                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                            "enum": [
                                                "static-key"
                                            ],
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                            "type": "string"
                                        },
                                        "SecretArn": {
                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SecretArn",
                                        "Algorithm",
                                        "RoleArn"
                                    ],
                                    "type": "object"
                                },
                                "MaxLatency": {
                                    "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                    "type": "integer"
                                },
                                "Name": {
                                    "description": "The name of the output. This value must be unique within the current flow.",
                                    "type": "string"
                                },
                                "Port": {
                                    "description": "The port to use when content is distributed to this output.",
                                    "type": "integer"
                                },
                                "Protocol": {
                                    "description": "The protocol to use for the output.",
                                    "enum": [
                                        "zixi-push",
                                        "rtp-fec",
                                        "rtp"
                                    ],
                                    "type": "string"
                                },
                                "SmoothingLatency": {
                                    "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                    "type": "integer"
                                },
                                "StreamId": {
                                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Destination",
                                "Port",
                                "Protocol"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Source": {
                        "description": "The settings for the source of the flow.",
                        "properties": {
                            "Decryption": {
                                "description": "The type of encryption that is used on the content ingested from this source.",
                                "properties": {
                                    "Algorithm": {
                                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                        "enum": [
                                            "aes128",
                                            "aes192",
                                            "aes256"
                                        ],
                                        "type": "string"
                                    },
                                    "KeyType": {
                                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                        "enum": [
                                            "static-key"
                                        ],
                                        "type": "string"
                                    },
                                    "RoleArn": {
                                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                        "type": "string"
                                    },
                                    "SecretArn": {
                                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SecretArn",
                                    "Algorithm",
                                    "RoleArn"
                                ],
                                "type": "object"
                            },
                            "Description": {
                                "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                "type": "string"
                            },
                            "EntitlementArn": {
                                "description": "The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator's flow.",
                                "type": "string"
                            },
                            "IngestPort": {
                                "description": "The port that the flow will be listening on for incoming content.",
                                "type": "integer"
                            },
                            "MaxBitrate": {
                                "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                "type": "integer"
                            },
                            "MaxLatency": {
                                "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                "type": "integer"
                            },
                            "Name": {
                                "description": "The name of the source.",
                                "type": "string"
                            },
                            "Protocol": {
                                "description": "The protocol that is used by the source.",
                                "enum": [
                                    "zixi-push",
                                    "rtp-fec",
                                    "rtp"
                                ],
                                "type": "string"
                            },
                            "StreamId": {
                                "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                "type": "string"
                            },
                            "WhitelistCidr": {
                                "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "Source",
                    "Name"
                ],
                "type": "object"
            },
            "CreateFlowResponse": {
                "properties": {
                    "Flow": {
                        "description": "The settings for a flow, including its source, outputs, and entitlements.",
                        "properties": {
                            "AvailabilityZone": {
                                "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "A description of the flow. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                "type": "string"
                            },
                            "EgressIp": {
                                "description": "The IP address from which video will be sent to output destinations.",
                                "type": "string"
                            },
                            "Entitlements": {
                                "description": "The entitlements in this flow.",
                                "items": {
                                    "description": "The settings for a flow entitlement.",
                                    "properties": {
                                        "Description": {
                                            "description": "A description of the entitlement.",
                                            "type": "string"
                                        },
                                        "Encryption": {
                                            "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                            "properties": {
                                                "Algorithm": {
                                                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                    "enum": [
                                                        "aes128",
                                                        "aes192",
                                                        "aes256"
                                                    ],
                                                    "type": "string"
                                                },
                                                "KeyType": {
                                                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                    "enum": [
                                                        "static-key"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RoleArn": {
                                                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                    "type": "string"
                                                },
                                                "SecretArn": {
                                                    "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "SecretArn",
                                                "Algorithm",
                                                "RoleArn"
                                            ],
                                            "type": "object"
                                        },
                                        "EntitlementArn": {
                                            "description": "The ARN of the entitlement.",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the entitlement.",
                                            "type": "string"
                                        },
                                        "Subscribers": {
                                            "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "EntitlementArn",
                                        "Subscribers",
                                        "Name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "FlowArn": {
                                "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the flow.",
                                "type": "string"
                            },
                            "Outputs": {
                                "description": "The outputs in this flow.",
                                "items": {
                                    "description": "The settings for an output.",
                                    "properties": {
                                        "Description": {
                                            "description": "A description of the output.",
                                            "type": "string"
                                        },
                                        "Destination": {
                                            "description": "The address where you want to send the output.",
                                            "type": "string"
                                        },
                                        "Encryption": {
                                            "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                            "properties": {
                                                "Algorithm": {
                                                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                    "enum": [
                                                        "aes128",
                                                        "aes192",
                                                        "aes256"
                                                    ],
                                                    "type": "string"
                                                },
                                                "KeyType": {
                                                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                    "enum": [
                                                        "static-key"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RoleArn": {
                                                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                    "type": "string"
                                                },
                                                "SecretArn": {
                                                    "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "SecretArn",
                                                "Algorithm",
                                                "RoleArn"
                                            ],
                                            "type": "object"
                                        },
                                        "EntitlementArn": {
                                            "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                                            "type": "string"
                                        },
                                        "MediaLiveInputArn": {
                                            "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the output. This value must be unique within the current flow.",
                                            "type": "string"
                                        },
                                        "OutputArn": {
                                            "description": "The ARN of the output.",
                                            "type": "string"
                                        },
                                        "Port": {
                                            "description": "The port to use when content is distributed to this output.",
                                            "type": "integer"
                                        },
                                        "Transport": {
                                            "description": "Attributes related to the transport stream that are used in the output.",
                                            "properties": {
                                                "MaxBitrate": {
                                                    "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                    "type": "integer"
                                                },
                                                "MaxLatency": {
                                                    "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                    "type": "integer"
                                                },
                                                "Protocol": {
                                                    "description": "The protocol that is used by the source or output.",
                                                    "enum": [
                                                        "zixi-push",
                                                        "rtp-fec",
                                                        "rtp"
                                                    ],
                                                    "type": "string"
                                                },
                                                "SmoothingLatency": {
                                                    "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                    "type": "integer"
                                                },
                                                "StreamId": {
                                                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Protocol"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "OutputArn",
                                        "Name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Source": {
                                "description": "The settings for the source of the flow.",
                                "properties": {
                                    "Decryption": {
                                        "description": "The type of encryption that is used on the content ingested from this source.",
                                        "properties": {
                                            "Algorithm": {
                                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                "enum": [
                                                    "aes128",
                                                    "aes192",
                                                    "aes256"
                                                ],
                                                "type": "string"
                                            },
                                            "KeyType": {
                                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                "enum": [
                                                    "static-key"
                                                ],
                                                "type": "string"
                                            },
                                            "RoleArn": {
                                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                "type": "string"
                                            },
                                            "SecretArn": {
                                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "SecretArn",
                                            "Algorithm",
                                            "RoleArn"
                                        ],
                                        "type": "object"
                                    },
                                    "Description": {
                                        "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                        "type": "string"
                                    },
                                    "EntitlementArn": {
                                        "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.",
                                        "type": "string"
                                    },
                                    "IngestIp": {
                                        "description": "The IP address that the flow will be listening on for incoming content.",
                                        "type": "string"
                                    },
                                    "IngestPort": {
                                        "description": "The port that the flow will be listening on for incoming content.",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the source.",
                                        "type": "string"
                                    },
                                    "SourceArn": {
                                        "description": "The ARN of the source.",
                                        "type": "string"
                                    },
                                    "Transport": {
                                        "description": "Attributes related to the transport stream that are used in the source.",
                                        "properties": {
                                            "MaxBitrate": {
                                                "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                "type": "integer"
                                            },
                                            "MaxLatency": {
                                                "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                "type": "integer"
                                            },
                                            "Protocol": {
                                                "description": "The protocol that is used by the source or output.",
                                                "enum": [
                                                    "zixi-push",
                                                    "rtp-fec",
                                                    "rtp"
                                                ],
                                                "type": "string"
                                            },
                                            "SmoothingLatency": {
                                                "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                "type": "integer"
                                            },
                                            "StreamId": {
                                                "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Protocol"
                                        ],
                                        "type": "object"
                                    },
                                    "WhitelistCidr": {
                                        "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SourceArn",
                                    "Name"
                                ],
                                "type": "object"
                            },
                            "Status": {
                                "description": "The current status of the flow.",
                                "enum": [
                                    "STANDBY",
                                    "ACTIVE",
                                    "UPDATING",
                                    "DELETING",
                                    "STARTING",
                                    "STOPPING",
                                    "ERROR"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "Status",
                            "Entitlements",
                            "Outputs",
                            "AvailabilityZone",
                            "FlowArn",
                            "Source",
                            "Name"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeleteFlowRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteFlowResponse": {
                "properties": {
                    "FlowArn": {
                        "description": "The ARN of the flow that was deleted.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the flow when the DeleteFlow process begins.",
                        "enum": [
                            "STANDBY",
                            "ACTIVE",
                            "UPDATING",
                            "DELETING",
                            "STARTING",
                            "STOPPING",
                            "ERROR"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeFlowRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeFlowResponse": {
                "properties": {
                    "Flow": {
                        "description": "The settings for a flow, including its source, outputs, and entitlements.",
                        "properties": {
                            "AvailabilityZone": {
                                "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "A description of the flow. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                "type": "string"
                            },
                            "EgressIp": {
                                "description": "The IP address from which video will be sent to output destinations.",
                                "type": "string"
                            },
                            "Entitlements": {
                                "description": "The entitlements in this flow.",
                                "items": {
                                    "description": "The settings for a flow entitlement.",
                                    "properties": {
                                        "Description": {
                                            "description": "A description of the entitlement.",
                                            "type": "string"
                                        },
                                        "Encryption": {
                                            "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                            "properties": {
                                                "Algorithm": {
                                                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                    "enum": [
                                                        "aes128",
                                                        "aes192",
                                                        "aes256"
                                                    ],
                                                    "type": "string"
                                                },
                                                "KeyType": {
                                                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                    "enum": [
                                                        "static-key"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RoleArn": {
                                                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                    "type": "string"
                                                },
                                                "SecretArn": {
                                                    "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "SecretArn",
                                                "Algorithm",
                                                "RoleArn"
                                            ],
                                            "type": "object"
                                        },
                                        "EntitlementArn": {
                                            "description": "The ARN of the entitlement.",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the entitlement.",
                                            "type": "string"
                                        },
                                        "Subscribers": {
                                            "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "EntitlementArn",
                                        "Subscribers",
                                        "Name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "FlowArn": {
                                "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the flow.",
                                "type": "string"
                            },
                            "Outputs": {
                                "description": "The outputs in this flow.",
                                "items": {
                                    "description": "The settings for an output.",
                                    "properties": {
                                        "Description": {
                                            "description": "A description of the output.",
                                            "type": "string"
                                        },
                                        "Destination": {
                                            "description": "The address where you want to send the output.",
                                            "type": "string"
                                        },
                                        "Encryption": {
                                            "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                            "properties": {
                                                "Algorithm": {
                                                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                    "enum": [
                                                        "aes128",
                                                        "aes192",
                                                        "aes256"
                                                    ],
                                                    "type": "string"
                                                },
                                                "KeyType": {
                                                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                    "enum": [
                                                        "static-key"
                                                    ],
                                                    "type": "string"
                                                },
                                                "RoleArn": {
                                                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                    "type": "string"
                                                },
                                                "SecretArn": {
                                                    "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "SecretArn",
                                                "Algorithm",
                                                "RoleArn"
                                            ],
                                            "type": "object"
                                        },
                                        "EntitlementArn": {
                                            "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                                            "type": "string"
                                        },
                                        "MediaLiveInputArn": {
                                            "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "The name of the output. This value must be unique within the current flow.",
                                            "type": "string"
                                        },
                                        "OutputArn": {
                                            "description": "The ARN of the output.",
                                            "type": "string"
                                        },
                                        "Port": {
                                            "description": "The port to use when content is distributed to this output.",
                                            "type": "integer"
                                        },
                                        "Transport": {
                                            "description": "Attributes related to the transport stream that are used in the output.",
                                            "properties": {
                                                "MaxBitrate": {
                                                    "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                    "type": "integer"
                                                },
                                                "MaxLatency": {
                                                    "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                    "type": "integer"
                                                },
                                                "Protocol": {
                                                    "description": "The protocol that is used by the source or output.",
                                                    "enum": [
                                                        "zixi-push",
                                                        "rtp-fec",
                                                        "rtp"
                                                    ],
                                                    "type": "string"
                                                },
                                                "SmoothingLatency": {
                                                    "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                    "type": "integer"
                                                },
                                                "StreamId": {
                                                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Protocol"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "OutputArn",
                                        "Name"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Source": {
                                "description": "The settings for the source of the flow.",
                                "properties": {
                                    "Decryption": {
                                        "description": "The type of encryption that is used on the content ingested from this source.",
                                        "properties": {
                                            "Algorithm": {
                                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                                "enum": [
                                                    "aes128",
                                                    "aes192",
                                                    "aes256"
                                                ],
                                                "type": "string"
                                            },
                                            "KeyType": {
                                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                                "enum": [
                                                    "static-key"
                                                ],
                                                "type": "string"
                                            },
                                            "RoleArn": {
                                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                                "type": "string"
                                            },
                                            "SecretArn": {
                                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "SecretArn",
                                            "Algorithm",
                                            "RoleArn"
                                        ],
                                        "type": "object"
                                    },
                                    "Description": {
                                        "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                        "type": "string"
                                    },
                                    "EntitlementArn": {
                                        "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.",
                                        "type": "string"
                                    },
                                    "IngestIp": {
                                        "description": "The IP address that the flow will be listening on for incoming content.",
                                        "type": "string"
                                    },
                                    "IngestPort": {
                                        "description": "The port that the flow will be listening on for incoming content.",
                                        "type": "integer"
                                    },
                                    "Name": {
                                        "description": "The name of the source.",
                                        "type": "string"
                                    },
                                    "SourceArn": {
                                        "description": "The ARN of the source.",
                                        "type": "string"
                                    },
                                    "Transport": {
                                        "description": "Attributes related to the transport stream that are used in the source.",
                                        "properties": {
                                            "MaxBitrate": {
                                                "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                                "type": "integer"
                                            },
                                            "MaxLatency": {
                                                "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                                "type": "integer"
                                            },
                                            "Protocol": {
                                                "description": "The protocol that is used by the source or output.",
                                                "enum": [
                                                    "zixi-push",
                                                    "rtp-fec",
                                                    "rtp"
                                                ],
                                                "type": "string"
                                            },
                                            "SmoothingLatency": {
                                                "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                                "type": "integer"
                                            },
                                            "StreamId": {
                                                "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Protocol"
                                        ],
                                        "type": "object"
                                    },
                                    "WhitelistCidr": {
                                        "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SourceArn",
                                    "Name"
                                ],
                                "type": "object"
                            },
                            "Status": {
                                "description": "The current status of the flow.",
                                "enum": [
                                    "STANDBY",
                                    "ACTIVE",
                                    "UPDATING",
                                    "DELETING",
                                    "STARTING",
                                    "STOPPING",
                                    "ERROR"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "Status",
                            "Entitlements",
                            "Outputs",
                            "AvailabilityZone",
                            "FlowArn",
                            "Source",
                            "Name"
                        ],
                        "type": "object"
                    },
                    "Messages": {
                        "description": "Messages that provide the state of the flow.",
                        "properties": {
                            "Errors": {
                                "description": "A list of errors that might have been generated from processes on this flow.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "Errors"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Encryption": {
                "description": "Information about the encryption of the flow.",
                "properties": {
                    "Algorithm": {
                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                        "enum": [
                            "aes128",
                            "aes192",
                            "aes256"
                        ],
                        "type": "string"
                    },
                    "KeyType": {
                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                        "enum": [
                            "static-key"
                        ],
                        "type": "string"
                    },
                    "RoleArn": {
                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                        "type": "string"
                    },
                    "SecretArn": {
                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                        "type": "string"
                    }
                },
                "required": [
                    "SecretArn",
                    "Algorithm",
                    "RoleArn"
                ],
                "type": "object"
            },
            "Entitlement": {
                "description": "The settings for a flow entitlement.",
                "properties": {
                    "Description": {
                        "description": "A description of the entitlement.",
                        "type": "string"
                    },
                    "Encryption": {
                        "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                        "properties": {
                            "Algorithm": {
                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                "enum": [
                                    "aes128",
                                    "aes192",
                                    "aes256"
                                ],
                                "type": "string"
                            },
                            "KeyType": {
                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                "enum": [
                                    "static-key"
                                ],
                                "type": "string"
                            },
                            "RoleArn": {
                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                "type": "string"
                            },
                            "SecretArn": {
                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "SecretArn",
                            "Algorithm",
                            "RoleArn"
                        ],
                        "type": "object"
                    },
                    "EntitlementArn": {
                        "description": "The ARN of the entitlement.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the entitlement.",
                        "type": "string"
                    },
                    "Subscribers": {
                        "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "EntitlementArn",
                    "Subscribers",
                    "Name"
                ],
                "type": "object"
            },
            "Flow": {
                "description": "The settings for a flow, including its source, outputs, and entitlements.",
                "properties": {
                    "AvailabilityZone": {
                        "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "A description of the flow. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                        "type": "string"
                    },
                    "EgressIp": {
                        "description": "The IP address from which video will be sent to output destinations.",
                        "type": "string"
                    },
                    "Entitlements": {
                        "description": "The entitlements in this flow.",
                        "items": {
                            "description": "The settings for a flow entitlement.",
                            "properties": {
                                "Description": {
                                    "description": "A description of the entitlement.",
                                    "type": "string"
                                },
                                "Encryption": {
                                    "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                    "properties": {
                                        "Algorithm": {
                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                            "enum": [
                                                "aes128",
                                                "aes192",
                                                "aes256"
                                            ],
                                            "type": "string"
                                        },
                                        "KeyType": {
                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                            "enum": [
                                                "static-key"
                                            ],
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                            "type": "string"
                                        },
                                        "SecretArn": {
                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SecretArn",
                                        "Algorithm",
                                        "RoleArn"
                                    ],
                                    "type": "object"
                                },
                                "EntitlementArn": {
                                    "description": "The ARN of the entitlement.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the entitlement.",
                                    "type": "string"
                                },
                                "Subscribers": {
                                    "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "EntitlementArn",
                                "Subscribers",
                                "Name"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "FlowArn": {
                        "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the flow.",
                        "type": "string"
                    },
                    "Outputs": {
                        "description": "The outputs in this flow.",
                        "items": {
                            "description": "The settings for an output.",
                            "properties": {
                                "Description": {
                                    "description": "A description of the output.",
                                    "type": "string"
                                },
                                "Destination": {
                                    "description": "The address where you want to send the output.",
                                    "type": "string"
                                },
                                "Encryption": {
                                    "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                    "properties": {
                                        "Algorithm": {
                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                            "enum": [
                                                "aes128",
                                                "aes192",
                                                "aes256"
                                            ],
                                            "type": "string"
                                        },
                                        "KeyType": {
                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                            "enum": [
                                                "static-key"
                                            ],
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                            "type": "string"
                                        },
                                        "SecretArn": {
                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SecretArn",
                                        "Algorithm",
                                        "RoleArn"
                                    ],
                                    "type": "object"
                                },
                                "EntitlementArn": {
                                    "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                                    "type": "string"
                                },
                                "MediaLiveInputArn": {
                                    "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the output. This value must be unique within the current flow.",
                                    "type": "string"
                                },
                                "OutputArn": {
                                    "description": "The ARN of the output.",
                                    "type": "string"
                                },
                                "Port": {
                                    "description": "The port to use when content is distributed to this output.",
                                    "type": "integer"
                                },
                                "Transport": {
                                    "description": "Attributes related to the transport stream that are used in the output.",
                                    "properties": {
                                        "MaxBitrate": {
                                            "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                            "type": "integer"
                                        },
                                        "MaxLatency": {
                                            "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                            "type": "integer"
                                        },
                                        "Protocol": {
                                            "description": "The protocol that is used by the source or output.",
                                            "enum": [
                                                "zixi-push",
                                                "rtp-fec",
                                                "rtp"
                                            ],
                                            "type": "string"
                                        },
                                        "SmoothingLatency": {
                                            "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                            "type": "integer"
                                        },
                                        "StreamId": {
                                            "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Protocol"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "OutputArn",
                                "Name"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Source": {
                        "description": "The settings for the source of the flow.",
                        "properties": {
                            "Decryption": {
                                "description": "The type of encryption that is used on the content ingested from this source.",
                                "properties": {
                                    "Algorithm": {
                                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                        "enum": [
                                            "aes128",
                                            "aes192",
                                            "aes256"
                                        ],
                                        "type": "string"
                                    },
                                    "KeyType": {
                                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                        "enum": [
                                            "static-key"
                                        ],
                                        "type": "string"
                                    },
                                    "RoleArn": {
                                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                        "type": "string"
                                    },
                                    "SecretArn": {
                                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SecretArn",
                                    "Algorithm",
                                    "RoleArn"
                                ],
                                "type": "object"
                            },
                            "Description": {
                                "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                "type": "string"
                            },
                            "EntitlementArn": {
                                "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.",
                                "type": "string"
                            },
                            "IngestIp": {
                                "description": "The IP address that the flow will be listening on for incoming content.",
                                "type": "string"
                            },
                            "IngestPort": {
                                "description": "The port that the flow will be listening on for incoming content.",
                                "type": "integer"
                            },
                            "Name": {
                                "description": "The name of the source.",
                                "type": "string"
                            },
                            "SourceArn": {
                                "description": "The ARN of the source.",
                                "type": "string"
                            },
                            "Transport": {
                                "description": "Attributes related to the transport stream that are used in the source.",
                                "properties": {
                                    "MaxBitrate": {
                                        "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                        "type": "integer"
                                    },
                                    "MaxLatency": {
                                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                        "type": "integer"
                                    },
                                    "Protocol": {
                                        "description": "The protocol that is used by the source or output.",
                                        "enum": [
                                            "zixi-push",
                                            "rtp-fec",
                                            "rtp"
                                        ],
                                        "type": "string"
                                    },
                                    "SmoothingLatency": {
                                        "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                        "type": "integer"
                                    },
                                    "StreamId": {
                                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Protocol"
                                ],
                                "type": "object"
                            },
                            "WhitelistCidr": {
                                "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "SourceArn",
                            "Name"
                        ],
                        "type": "object"
                    },
                    "Status": {
                        "description": "The current status of the flow.",
                        "enum": [
                            "STANDBY",
                            "ACTIVE",
                            "UPDATING",
                            "DELETING",
                            "STARTING",
                            "STOPPING",
                            "ERROR"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Status",
                    "Entitlements",
                    "Outputs",
                    "AvailabilityZone",
                    "FlowArn",
                    "Source",
                    "Name"
                ],
                "type": "object"
            },
            "ForbiddenException": {},
            "GrantEntitlementRequest": {
                "description": "The entitlements that you want to grant on a flow.",
                "properties": {
                    "Description": {
                        "description": "A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.",
                        "type": "string"
                    },
                    "Encryption": {
                        "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                        "properties": {
                            "Algorithm": {
                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                "enum": [
                                    "aes128",
                                    "aes192",
                                    "aes256"
                                ],
                                "type": "string"
                            },
                            "KeyType": {
                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                "enum": [
                                    "static-key"
                                ],
                                "type": "string"
                            },
                            "RoleArn": {
                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                "type": "string"
                            },
                            "SecretArn": {
                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "SecretArn",
                            "Algorithm",
                            "RoleArn"
                        ],
                        "type": "object"
                    },
                    "Name": {
                        "description": "The name of the entitlement. This value must be unique within the current flow.",
                        "type": "string"
                    },
                    "Subscribers": {
                        "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Subscribers"
                ],
                "type": "object"
            },
            "GrantFlowEntitlements420Exception": {},
            "GrantFlowEntitlementsRequest": {
                "description": "A request to grant entitlements on a flow.",
                "properties": {
                    "Entitlements": {
                        "description": "The list of entitlements that you want to grant.",
                        "items": {
                            "description": "The entitlements that you want to grant on a flow.",
                            "properties": {
                                "Description": {
                                    "description": "A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.",
                                    "type": "string"
                                },
                                "Encryption": {
                                    "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                    "properties": {
                                        "Algorithm": {
                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                            "enum": [
                                                "aes128",
                                                "aes192",
                                                "aes256"
                                            ],
                                            "type": "string"
                                        },
                                        "KeyType": {
                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                            "enum": [
                                                "static-key"
                                            ],
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                            "type": "string"
                                        },
                                        "SecretArn": {
                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SecretArn",
                                        "Algorithm",
                                        "RoleArn"
                                    ],
                                    "type": "object"
                                },
                                "Name": {
                                    "description": "The name of the entitlement. This value must be unique within the current flow.",
                                    "type": "string"
                                },
                                "Subscribers": {
                                    "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Subscribers"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Entitlements"
                ],
                "type": "object"
            },
            "GrantFlowEntitlementsResponse": {
                "properties": {
                    "Entitlements": {
                        "description": "The entitlements that were just granted.",
                        "items": {
                            "description": "The settings for a flow entitlement.",
                            "properties": {
                                "Description": {
                                    "description": "A description of the entitlement.",
                                    "type": "string"
                                },
                                "Encryption": {
                                    "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                    "properties": {
                                        "Algorithm": {
                                            "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                            "enum": [
                                                "aes128",
                                                "aes192",
                                                "aes256"
                                            ],
                                            "type": "string"
                                        },
                                        "KeyType": {
                                            "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                            "enum": [
                                                "static-key"
                                            ],
                                            "type": "string"
                                        },
                                        "RoleArn": {
                                            "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                            "type": "string"
                                        },
                                        "SecretArn": {
                                            "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "SecretArn",
                                        "Algorithm",
                                        "RoleArn"
                                    ],
                                    "type": "object"
                                },
                                "EntitlementArn": {
                                    "description": "The ARN of the entitlement.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the entitlement.",
                                    "type": "string"
                                },
                                "Subscribers": {
                                    "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "EntitlementArn",
                                "Subscribers",
                                "Name"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "FlowArn": {
                        "description": "The ARN of the flow that these entitlements were granted to.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InternalServerErrorException": {},
            "KeyType": {
                "enum": [
                    "static-key"
                ],
                "type": "string"
            },
            "ListEntitlementsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListEntitlementsResponse": {
                "properties": {
                    "Entitlements": {
                        "description": "A list of entitlements that have been granted to you from other AWS accounts.",
                        "items": {
                            "description": "An entitlement that has been granted to you from other AWS accounts.",
                            "properties": {
                                "EntitlementArn": {
                                    "description": "The ARN of the entitlement.",
                                    "type": "string"
                                },
                                "EntitlementName": {
                                    "description": "The name of the entitlement.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "EntitlementArn",
                                "EntitlementName"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token that identifies which batch of results that you want to see. For example, you submit a ListEntitlements request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListEntitlements request a second time and specify the NextToken value.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListFlowsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListFlowsResponse": {
                "properties": {
                    "Flows": {
                        "description": "A list of flow summaries.",
                        "items": {
                            "description": "Provides a summary of a flow, including its ARN, Availability Zone, and source type.",
                            "properties": {
                                "AvailabilityZone": {
                                    "description": "The Availability Zone that the flow was created in.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "A description of the flow.",
                                    "type": "string"
                                },
                                "FlowArn": {
                                    "description": "The ARN of the flow.",
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "The name of the flow.",
                                    "type": "string"
                                },
                                "SourceType": {
                                    "description": "The type of source. This value is either owned (originated somewhere other than an AWS Elemental MediaConnect flow owned by another AWS account) or entitled (originated at an AWS Elemental MediaConnect flow owned by another AWS account).",
                                    "enum": [
                                        "OWNED",
                                        "ENTITLED"
                                    ],
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The current status of the flow.",
                                    "enum": [
                                        "STANDBY",
                                        "ACTIVE",
                                        "UPDATING",
                                        "DELETING",
                                        "STARTING",
                                        "STOPPING",
                                        "ERROR"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Status",
                                "Description",
                                "SourceType",
                                "AvailabilityZone",
                                "FlowArn",
                                "Name"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "The token that identifies which batch of results that you want to see. For example, you submit a ListFlows request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the ListFlows request a second time and specify the NextToken value.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListTagsForResourceRequest": {
                "properties": {},
                "type": "object"
            },
            "ListTagsForResourceResponse": {
                "properties": {
                    "Tags": {
                        "description": "A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListedEntitlement": {
                "description": "An entitlement that has been granted to you from other AWS accounts.",
                "properties": {
                    "EntitlementArn": {
                        "description": "The ARN of the entitlement.",
                        "type": "string"
                    },
                    "EntitlementName": {
                        "description": "The name of the entitlement.",
                        "type": "string"
                    }
                },
                "required": [
                    "EntitlementArn",
                    "EntitlementName"
                ],
                "type": "object"
            },
            "ListedFlow": {
                "description": "Provides a summary of a flow, including its ARN, Availability Zone, and source type.",
                "properties": {
                    "AvailabilityZone": {
                        "description": "The Availability Zone that the flow was created in.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "A description of the flow.",
                        "type": "string"
                    },
                    "FlowArn": {
                        "description": "The ARN of the flow.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the flow.",
                        "type": "string"
                    },
                    "SourceType": {
                        "description": "The type of source. This value is either owned (originated somewhere other than an AWS Elemental MediaConnect flow owned by another AWS account) or entitled (originated at an AWS Elemental MediaConnect flow owned by another AWS account).",
                        "enum": [
                            "OWNED",
                            "ENTITLED"
                        ],
                        "type": "string"
                    },
                    "Status": {
                        "description": "The current status of the flow.",
                        "enum": [
                            "STANDBY",
                            "ACTIVE",
                            "UPDATING",
                            "DELETING",
                            "STARTING",
                            "STOPPING",
                            "ERROR"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Status",
                    "Description",
                    "SourceType",
                    "AvailabilityZone",
                    "FlowArn",
                    "Name"
                ],
                "type": "object"
            },
            "MaxResults": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
            },
            "Messages": {
                "description": "Messages that provide the state of the flow.",
                "properties": {
                    "Errors": {
                        "description": "A list of errors that might have been generated from processes on this flow.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Errors"
                ],
                "type": "object"
            },
            "NotFoundException": {},
            "Output": {
                "description": "The settings for an output.",
                "properties": {
                    "Description": {
                        "description": "A description of the output.",
                        "type": "string"
                    },
                    "Destination": {
                        "description": "The address where you want to send the output.",
                        "type": "string"
                    },
                    "Encryption": {
                        "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                        "properties": {
                            "Algorithm": {
                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                "enum": [
                                    "aes128",
                                    "aes192",
                                    "aes256"
                                ],
                                "type": "string"
                            },
                            "KeyType": {
                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                "enum": [
                                    "static-key"
                                ],
                                "type": "string"
                            },
                            "RoleArn": {
                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                "type": "string"
                            },
                            "SecretArn": {
                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "SecretArn",
                            "Algorithm",
                            "RoleArn"
                        ],
                        "type": "object"
                    },
                    "EntitlementArn": {
                        "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                        "type": "string"
                    },
                    "MediaLiveInputArn": {
                        "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                        "type": "string"
                    },
                    "Name": {
                        "description": "The name of the output. This value must be unique within the current flow.",
                        "type": "string"
                    },
                    "OutputArn": {
                        "description": "The ARN of the output.",
                        "type": "string"
                    },
                    "Port": {
                        "description": "The port to use when content is distributed to this output.",
                        "type": "integer"
                    },
                    "Transport": {
                        "description": "Attributes related to the transport stream that are used in the output.",
                        "properties": {
                            "MaxBitrate": {
                                "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                "type": "integer"
                            },
                            "MaxLatency": {
                                "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                "type": "integer"
                            },
                            "Protocol": {
                                "description": "The protocol that is used by the source or output.",
                                "enum": [
                                    "zixi-push",
                                    "rtp-fec",
                                    "rtp"
                                ],
                                "type": "string"
                            },
                            "SmoothingLatency": {
                                "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                "type": "integer"
                            },
                            "StreamId": {
                                "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "Protocol"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "OutputArn",
                    "Name"
                ],
                "type": "object"
            },
            "Protocol": {
                "enum": [
                    "zixi-push",
                    "rtp-fec",
                    "rtp"
                ],
                "type": "string"
            },
            "RemoveFlowOutputRequest": {
                "properties": {},
                "type": "object"
            },
            "RemoveFlowOutputResponse": {
                "properties": {
                    "FlowArn": {
                        "description": "The ARN of the flow that is associated with the output you removed.",
                        "type": "string"
                    },
                    "OutputArn": {
                        "description": "The ARN of the output that was removed.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RevokeFlowEntitlementRequest": {
                "properties": {},
                "type": "object"
            },
            "RevokeFlowEntitlementResponse": {
                "properties": {
                    "EntitlementArn": {
                        "description": "The ARN of the entitlement that was revoked.",
                        "type": "string"
                    },
                    "FlowArn": {
                        "description": "The ARN of the flow that the entitlement was revoked from.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ServiceUnavailableException": {},
            "SetSourceRequest": {
                "description": "The settings for the source of the flow.",
                "properties": {
                    "Decryption": {
                        "description": "The type of encryption that is used on the content ingested from this source.",
                        "properties": {
                            "Algorithm": {
                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                "enum": [
                                    "aes128",
                                    "aes192",
                                    "aes256"
                                ],
                                "type": "string"
                            },
                            "KeyType": {
                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                "enum": [
                                    "static-key"
                                ],
                                "type": "string"
                            },
                            "RoleArn": {
                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                "type": "string"
                            },
                            "SecretArn": {
                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "SecretArn",
                            "Algorithm",
                            "RoleArn"
                        ],
                        "type": "object"
                    },
                    "Description": {
                        "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                        "type": "string"
                    },
                    "EntitlementArn": {
                        "description": "The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator's flow.",
                        "type": "string"
                    },
                    "IngestPort": {
                        "description": "The port that the flow will be listening on for incoming content.",
                        "type": "integer"
                    },
                    "MaxBitrate": {
                        "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                        "type": "integer"
                    },
                    "MaxLatency": {
                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                        "type": "integer"
                    },
                    "Name": {
                        "description": "The name of the source.",
                        "type": "string"
                    },
                    "Protocol": {
                        "description": "The protocol that is used by the source.",
                        "enum": [
                            "zixi-push",
                            "rtp-fec",
                            "rtp"
                        ],
                        "type": "string"
                    },
                    "StreamId": {
                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                        "type": "string"
                    },
                    "WhitelistCidr": {
                        "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Source": {
                "description": "The settings for the source of the flow.",
                "properties": {
                    "Decryption": {
                        "description": "The type of encryption that is used on the content ingested from this source.",
                        "properties": {
                            "Algorithm": {
                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                "enum": [
                                    "aes128",
                                    "aes192",
                                    "aes256"
                                ],
                                "type": "string"
                            },
                            "KeyType": {
                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                "enum": [
                                    "static-key"
                                ],
                                "type": "string"
                            },
                            "RoleArn": {
                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                "type": "string"
                            },
                            "SecretArn": {
                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "SecretArn",
                            "Algorithm",
                            "RoleArn"
                        ],
                        "type": "object"
                    },
                    "Description": {
                        "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                        "type": "string"
                    },
                    "EntitlementArn": {
                        "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.",
                        "type": "string"
                    },
                    "IngestIp": {
                        "description": "The IP address that the flow will be listening on for incoming content.",
                        "type": "string"
                    },
                    "IngestPort": {
                        "description": "The port that the flow will be listening on for incoming content.",
                        "type": "integer"
                    },
                    "Name": {
                        "description": "The name of the source.",
                        "type": "string"
                    },
                    "SourceArn": {
                        "description": "The ARN of the source.",
                        "type": "string"
                    },
                    "Transport": {
                        "description": "Attributes related to the transport stream that are used in the source.",
                        "properties": {
                            "MaxBitrate": {
                                "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                "type": "integer"
                            },
                            "MaxLatency": {
                                "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                "type": "integer"
                            },
                            "Protocol": {
                                "description": "The protocol that is used by the source or output.",
                                "enum": [
                                    "zixi-push",
                                    "rtp-fec",
                                    "rtp"
                                ],
                                "type": "string"
                            },
                            "SmoothingLatency": {
                                "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                "type": "integer"
                            },
                            "StreamId": {
                                "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "Protocol"
                        ],
                        "type": "object"
                    },
                    "WhitelistCidr": {
                        "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                        "type": "string"
                    }
                },
                "required": [
                    "SourceArn",
                    "Name"
                ],
                "type": "object"
            },
            "SourceType": {
                "enum": [
                    "OWNED",
                    "ENTITLED"
                ],
                "type": "string"
            },
            "StartFlowRequest": {
                "properties": {},
                "type": "object"
            },
            "StartFlowResponse": {
                "properties": {
                    "FlowArn": {
                        "description": "The ARN of the flow that you started.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the flow when the StartFlow process begins.",
                        "enum": [
                            "STANDBY",
                            "ACTIVE",
                            "UPDATING",
                            "DELETING",
                            "STARTING",
                            "STOPPING",
                            "ERROR"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Status": {
                "enum": [
                    "STANDBY",
                    "ACTIVE",
                    "UPDATING",
                    "DELETING",
                    "STARTING",
                    "STOPPING",
                    "ERROR"
                ],
                "type": "string"
            },
            "StopFlowRequest": {
                "properties": {},
                "type": "object"
            },
            "StopFlowResponse": {
                "properties": {
                    "FlowArn": {
                        "description": "The ARN of the flow that you stopped.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the flow when the StopFlow process begins.",
                        "enum": [
                            "STANDBY",
                            "ACTIVE",
                            "UPDATING",
                            "DELETING",
                            "STARTING",
                            "STOPPING",
                            "ERROR"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TagResourceRequest": {
                "description": "The tags to add to the resource. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
                "properties": {
                    "Tags": {
                        "description": "A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Tags"
                ],
                "type": "object"
            },
            "TooManyRequestsException": {},
            "Transport": {
                "description": "Attributes related to the transport stream that are used in a source or output.",
                "properties": {
                    "MaxBitrate": {
                        "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                        "type": "integer"
                    },
                    "MaxLatency": {
                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                        "type": "integer"
                    },
                    "Protocol": {
                        "description": "The protocol that is used by the source or output.",
                        "enum": [
                            "zixi-push",
                            "rtp-fec",
                            "rtp"
                        ],
                        "type": "string"
                    },
                    "SmoothingLatency": {
                        "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                        "type": "integer"
                    },
                    "StreamId": {
                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                        "type": "string"
                    }
                },
                "required": [
                    "Protocol"
                ],
                "type": "object"
            },
            "UntagResourceRequest": {
                "properties": {},
                "type": "object"
            },
            "UpdateEncryption": {
                "description": "Information about the encryption of the flow.",
                "properties": {
                    "Algorithm": {
                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                        "enum": [
                            "aes128",
                            "aes192",
                            "aes256"
                        ],
                        "type": "string"
                    },
                    "KeyType": {
                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                        "enum": [
                            "static-key"
                        ],
                        "type": "string"
                    },
                    "RoleArn": {
                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                        "type": "string"
                    },
                    "SecretArn": {
                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateFlowEntitlementRequest": {
                "description": "The entitlement fields that you want to update.",
                "properties": {
                    "Description": {
                        "description": "A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.",
                        "type": "string"
                    },
                    "Encryption": {
                        "description": "The type of encryption that will be used on the output associated with this entitlement.",
                        "properties": {
                            "Algorithm": {
                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                "enum": [
                                    "aes128",
                                    "aes192",
                                    "aes256"
                                ],
                                "type": "string"
                            },
                            "KeyType": {
                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                "enum": [
                                    "static-key"
                                ],
                                "type": "string"
                            },
                            "RoleArn": {
                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                "type": "string"
                            },
                            "SecretArn": {
                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Subscribers": {
                        "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UpdateFlowEntitlementResponse": {
                "properties": {
                    "Entitlement": {
                        "description": "The settings for a flow entitlement.",
                        "properties": {
                            "Description": {
                                "description": "A description of the entitlement.",
                                "type": "string"
                            },
                            "Encryption": {
                                "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                                "properties": {
                                    "Algorithm": {
                                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                        "enum": [
                                            "aes128",
                                            "aes192",
                                            "aes256"
                                        ],
                                        "type": "string"
                                    },
                                    "KeyType": {
                                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                        "enum": [
                                            "static-key"
                                        ],
                                        "type": "string"
                                    },
                                    "RoleArn": {
                                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                        "type": "string"
                                    },
                                    "SecretArn": {
                                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SecretArn",
                                    "Algorithm",
                                    "RoleArn"
                                ],
                                "type": "object"
                            },
                            "EntitlementArn": {
                                "description": "The ARN of the entitlement.",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the entitlement.",
                                "type": "string"
                            },
                            "Subscribers": {
                                "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "EntitlementArn",
                            "Subscribers",
                            "Name"
                        ],
                        "type": "object"
                    },
                    "FlowArn": {
                        "description": "The ARN of the flow that this entitlement was granted on.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateFlowOutputRequest": {
                "description": "The fields that you want to update in the output.",
                "properties": {
                    "Description": {
                        "description": "A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.",
                        "type": "string"
                    },
                    "Destination": {
                        "description": "The IP address where you want to send the output.",
                        "type": "string"
                    },
                    "Encryption": {
                        "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                        "properties": {
                            "Algorithm": {
                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                "enum": [
                                    "aes128",
                                    "aes192",
                                    "aes256"
                                ],
                                "type": "string"
                            },
                            "KeyType": {
                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                "enum": [
                                    "static-key"
                                ],
                                "type": "string"
                            },
                            "RoleArn": {
                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                "type": "string"
                            },
                            "SecretArn": {
                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "MaxLatency": {
                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                        "type": "integer"
                    },
                    "Port": {
                        "description": "The port to use when content is distributed to this output.",
                        "type": "integer"
                    },
                    "Protocol": {
                        "description": "The protocol to use for the output.",
                        "enum": [
                            "zixi-push",
                            "rtp-fec",
                            "rtp"
                        ],
                        "type": "string"
                    },
                    "SmoothingLatency": {
                        "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                        "type": "integer"
                    },
                    "StreamId": {
                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateFlowOutputResponse": {
                "properties": {
                    "FlowArn": {
                        "description": "The ARN of the flow that is associated with the updated output.",
                        "type": "string"
                    },
                    "Output": {
                        "description": "The settings for an output.",
                        "properties": {
                            "Description": {
                                "description": "A description of the output.",
                                "type": "string"
                            },
                            "Destination": {
                                "description": "The address where you want to send the output.",
                                "type": "string"
                            },
                            "Encryption": {
                                "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                "properties": {
                                    "Algorithm": {
                                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                        "enum": [
                                            "aes128",
                                            "aes192",
                                            "aes256"
                                        ],
                                        "type": "string"
                                    },
                                    "KeyType": {
                                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                        "enum": [
                                            "static-key"
                                        ],
                                        "type": "string"
                                    },
                                    "RoleArn": {
                                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                        "type": "string"
                                    },
                                    "SecretArn": {
                                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SecretArn",
                                    "Algorithm",
                                    "RoleArn"
                                ],
                                "type": "object"
                            },
                            "EntitlementArn": {
                                "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                                "type": "string"
                            },
                            "MediaLiveInputArn": {
                                "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                                "type": "string"
                            },
                            "Name": {
                                "description": "The name of the output. This value must be unique within the current flow.",
                                "type": "string"
                            },
                            "OutputArn": {
                                "description": "The ARN of the output.",
                                "type": "string"
                            },
                            "Port": {
                                "description": "The port to use when content is distributed to this output.",
                                "type": "integer"
                            },
                            "Transport": {
                                "description": "Attributes related to the transport stream that are used in the output.",
                                "properties": {
                                    "MaxBitrate": {
                                        "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                        "type": "integer"
                                    },
                                    "MaxLatency": {
                                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                        "type": "integer"
                                    },
                                    "Protocol": {
                                        "description": "The protocol that is used by the source or output.",
                                        "enum": [
                                            "zixi-push",
                                            "rtp-fec",
                                            "rtp"
                                        ],
                                        "type": "string"
                                    },
                                    "SmoothingLatency": {
                                        "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                        "type": "integer"
                                    },
                                    "StreamId": {
                                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Protocol"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "OutputArn",
                            "Name"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateFlowSourceRequest": {
                "description": "A request to update the source of a flow.",
                "properties": {
                    "Decryption": {
                        "description": "The type of encryption used on the content ingested from this source.",
                        "properties": {
                            "Algorithm": {
                                "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                "enum": [
                                    "aes128",
                                    "aes192",
                                    "aes256"
                                ],
                                "type": "string"
                            },
                            "KeyType": {
                                "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                "enum": [
                                    "static-key"
                                ],
                                "type": "string"
                            },
                            "RoleArn": {
                                "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                "type": "string"
                            },
                            "SecretArn": {
                                "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Description": {
                        "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                        "type": "string"
                    },
                    "EntitlementArn": {
                        "description": "The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator's flow.",
                        "type": "string"
                    },
                    "IngestPort": {
                        "description": "The port that the flow will be listening on for incoming content.",
                        "type": "integer"
                    },
                    "MaxBitrate": {
                        "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                        "type": "integer"
                    },
                    "MaxLatency": {
                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                        "type": "integer"
                    },
                    "Protocol": {
                        "description": "The protocol that is used by the source.",
                        "enum": [
                            "zixi-push",
                            "rtp-fec",
                            "rtp"
                        ],
                        "type": "string"
                    },
                    "StreamId": {
                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                        "type": "string"
                    },
                    "WhitelistCidr": {
                        "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateFlowSourceResponse": {
                "properties": {
                    "FlowArn": {
                        "description": "The ARN of the flow that you want to update.",
                        "type": "string"
                    },
                    "Source": {
                        "description": "The settings for the source of the flow.",
                        "properties": {
                            "Decryption": {
                                "description": "The type of encryption that is used on the content ingested from this source.",
                                "properties": {
                                    "Algorithm": {
                                        "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                        "enum": [
                                            "aes128",
                                            "aes192",
                                            "aes256"
                                        ],
                                        "type": "string"
                                    },
                                    "KeyType": {
                                        "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                        "enum": [
                                            "static-key"
                                        ],
                                        "type": "string"
                                    },
                                    "RoleArn": {
                                        "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                        "type": "string"
                                    },
                                    "SecretArn": {
                                        "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SecretArn",
                                    "Algorithm",
                                    "RoleArn"
                                ],
                                "type": "object"
                            },
                            "Description": {
                                "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
                                "type": "string"
                            },
                            "EntitlementArn": {
                                "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.",
                                "type": "string"
                            },
                            "IngestIp": {
                                "description": "The IP address that the flow will be listening on for incoming content.",
                                "type": "string"
                            },
                            "IngestPort": {
                                "description": "The port that the flow will be listening on for incoming content.",
                                "type": "integer"
                            },
                            "Name": {
                                "description": "The name of the source.",
                                "type": "string"
                            },
                            "SourceArn": {
                                "description": "The ARN of the source.",
                                "type": "string"
                            },
                            "Transport": {
                                "description": "Attributes related to the transport stream that are used in the source.",
                                "properties": {
                                    "MaxBitrate": {
                                        "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                        "type": "integer"
                                    },
                                    "MaxLatency": {
                                        "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                        "type": "integer"
                                    },
                                    "Protocol": {
                                        "description": "The protocol that is used by the source or output.",
                                        "enum": [
                                            "zixi-push",
                                            "rtp-fec",
                                            "rtp"
                                        ],
                                        "type": "string"
                                    },
                                    "SmoothingLatency": {
                                        "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                        "type": "integer"
                                    },
                                    "StreamId": {
                                        "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Protocol"
                                ],
                                "type": "object"
                            },
                            "WhitelistCidr": {
                                "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "SourceArn",
                            "Name"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "__integer": {
                "type": "integer"
            },
            "__listOfAddOutputRequest": {
                "items": {
                    "description": "The output that you want to add to this flow.",
                    "properties": {
                        "Description": {
                            "description": "A description of the output. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the end user.",
                            "type": "string"
                        },
                        "Destination": {
                            "description": "The IP address from which video will be sent to output destinations.",
                            "type": "string"
                        },
                        "Encryption": {
                            "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                            "properties": {
                                "Algorithm": {
                                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                    "enum": [
                                        "aes128",
                                        "aes192",
                                        "aes256"
                                    ],
                                    "type": "string"
                                },
                                "KeyType": {
                                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                    "enum": [
                                        "static-key"
                                    ],
                                    "type": "string"
                                },
                                "RoleArn": {
                                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                    "type": "string"
                                },
                                "SecretArn": {
                                    "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "SecretArn",
                                "Algorithm",
                                "RoleArn"
                            ],
                            "type": "object"
                        },
                        "MaxLatency": {
                            "description": "The maximum latency in milliseconds for Zixi-based streams.",
                            "type": "integer"
                        },
                        "Name": {
                            "description": "The name of the output. This value must be unique within the current flow.",
                            "type": "string"
                        },
                        "Port": {
                            "description": "The port to use when content is distributed to this output.",
                            "type": "integer"
                        },
                        "Protocol": {
                            "description": "The protocol to use for the output.",
                            "enum": [
                                "zixi-push",
                                "rtp-fec",
                                "rtp"
                            ],
                            "type": "string"
                        },
                        "SmoothingLatency": {
                            "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                            "type": "integer"
                        },
                        "StreamId": {
                            "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "Destination",
                        "Port",
                        "Protocol"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "__listOfEntitlement": {
                "items": {
                    "description": "The settings for a flow entitlement.",
                    "properties": {
                        "Description": {
                            "description": "A description of the entitlement.",
                            "type": "string"
                        },
                        "Encryption": {
                            "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                            "properties": {
                                "Algorithm": {
                                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                    "enum": [
                                        "aes128",
                                        "aes192",
                                        "aes256"
                                    ],
                                    "type": "string"
                                },
                                "KeyType": {
                                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                    "enum": [
                                        "static-key"
                                    ],
                                    "type": "string"
                                },
                                "RoleArn": {
                                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                    "type": "string"
                                },
                                "SecretArn": {
                                    "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "SecretArn",
                                "Algorithm",
                                "RoleArn"
                            ],
                            "type": "object"
                        },
                        "EntitlementArn": {
                            "description": "The ARN of the entitlement.",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the entitlement.",
                            "type": "string"
                        },
                        "Subscribers": {
                            "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "EntitlementArn",
                        "Subscribers",
                        "Name"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "__listOfGrantEntitlementRequest": {
                "items": {
                    "description": "The entitlements that you want to grant on a flow.",
                    "properties": {
                        "Description": {
                            "description": "A description of the entitlement. This description appears only on the AWS Elemental MediaConnect console and will not be seen by the subscriber or end user.",
                            "type": "string"
                        },
                        "Encryption": {
                            "description": "The type of encryption that will be used on the output that is associated with this entitlement.",
                            "properties": {
                                "Algorithm": {
                                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                    "enum": [
                                        "aes128",
                                        "aes192",
                                        "aes256"
                                    ],
                                    "type": "string"
                                },
                                "KeyType": {
                                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                    "enum": [
                                        "static-key"
                                    ],
                                    "type": "string"
                                },
                                "RoleArn": {
                                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                    "type": "string"
                                },
                                "SecretArn": {
                                    "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "SecretArn",
                                "Algorithm",
                                "RoleArn"
                            ],
                            "type": "object"
                        },
                        "Name": {
                            "description": "The name of the entitlement. This value must be unique within the current flow.",
                            "type": "string"
                        },
                        "Subscribers": {
                            "description": "The AWS account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "Subscribers"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "__listOfListedEntitlement": {
                "items": {
                    "description": "An entitlement that has been granted to you from other AWS accounts.",
                    "properties": {
                        "EntitlementArn": {
                            "description": "The ARN of the entitlement.",
                            "type": "string"
                        },
                        "EntitlementName": {
                            "description": "The name of the entitlement.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "EntitlementArn",
                        "EntitlementName"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "__listOfListedFlow": {
                "items": {
                    "description": "Provides a summary of a flow, including its ARN, Availability Zone, and source type.",
                    "properties": {
                        "AvailabilityZone": {
                            "description": "The Availability Zone that the flow was created in.",
                            "type": "string"
                        },
                        "Description": {
                            "description": "A description of the flow.",
                            "type": "string"
                        },
                        "FlowArn": {
                            "description": "The ARN of the flow.",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the flow.",
                            "type": "string"
                        },
                        "SourceType": {
                            "description": "The type of source. This value is either owned (originated somewhere other than an AWS Elemental MediaConnect flow owned by another AWS account) or entitled (originated at an AWS Elemental MediaConnect flow owned by another AWS account).",
                            "enum": [
                                "OWNED",
                                "ENTITLED"
                            ],
                            "type": "string"
                        },
                        "Status": {
                            "description": "The current status of the flow.",
                            "enum": [
                                "STANDBY",
                                "ACTIVE",
                                "UPDATING",
                                "DELETING",
                                "STARTING",
                                "STOPPING",
                                "ERROR"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "Status",
                        "Description",
                        "SourceType",
                        "AvailabilityZone",
                        "FlowArn",
                        "Name"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "__listOfOutput": {
                "items": {
                    "description": "The settings for an output.",
                    "properties": {
                        "Description": {
                            "description": "A description of the output.",
                            "type": "string"
                        },
                        "Destination": {
                            "description": "The address where you want to send the output.",
                            "type": "string"
                        },
                        "Encryption": {
                            "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                            "properties": {
                                "Algorithm": {
                                    "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
                                    "enum": [
                                        "aes128",
                                        "aes192",
                                        "aes256"
                                    ],
                                    "type": "string"
                                },
                                "KeyType": {
                                    "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
                                    "enum": [
                                        "static-key"
                                    ],
                                    "type": "string"
                                },
                                "RoleArn": {
                                    "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
                                    "type": "string"
                                },
                                "SecretArn": {
                                    "description": "The ARN that was assigned to the secret that you created in AWS Secrets Manager to store the encryption key.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "SecretArn",
                                "Algorithm",
                                "RoleArn"
                            ],
                            "type": "object"
                        },
                        "EntitlementArn": {
                            "description": "The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.",
                            "type": "string"
                        },
                        "MediaLiveInputArn": {
                            "description": "The input ARN of the AWS Elemental MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.",
                            "type": "string"
                        },
                        "Name": {
                            "description": "The name of the output. This value must be unique within the current flow.",
                            "type": "string"
                        },
                        "OutputArn": {
                            "description": "The ARN of the output.",
                            "type": "string"
                        },
                        "Port": {
                            "description": "The port to use when content is distributed to this output.",
                            "type": "integer"
                        },
                        "Transport": {
                            "description": "Attributes related to the transport stream that are used in the output.",
                            "properties": {
                                "MaxBitrate": {
                                    "description": "The smoothing max bitrate for RTP and RTP-FEC streams.",
                                    "type": "integer"
                                },
                                "MaxLatency": {
                                    "description": "The maximum latency in milliseconds for Zixi-based streams.",
                                    "type": "integer"
                                },
                                "Protocol": {
                                    "description": "The protocol that is used by the source or output.",
                                    "enum": [
                                        "zixi-push",
                                        "rtp-fec",
                                        "rtp"
                                    ],
                                    "type": "string"
                                },
                                "SmoothingLatency": {
                                    "description": "The smoothing latency in milliseconds for RTP and RTP-FEC streams.",
                                    "type": "integer"
                                },
                                "StreamId": {
                                    "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Protocol"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "OutputArn",
                        "Name"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "__listOf__string": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "__mapOf__string": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "__string": {
                "type": "string"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "UntagResourceBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {},
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}